image: docker:19.03.10

services:
  - docker:dind

variables:
  REPOSITORY_URL: 725530182181.dkr.ecr.eu-west-1.amazonaws.com/1nfluencers-main-site-prod
  TASK_DEFINITION_NAME: producao
  CLUSTER_NAME: microservices
  SERVICE_NAME: producao

  REPOSITORY_URL_STG: 725530182181.dkr.ecr.eu-west-1.amazonaws.com/1nfluencers-main-site
  TASK_DEFINITION_NAME_STG: new-site
  CLUSTER_NAME_STG: microservices
  SERVICE_NAME_STG: new-site

before_script:
  - apk add --no-cache curl jq python py-pip
  - pip install awscli
  - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
  - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
  - aws configure set region $AWS_DEFAULT_REGION
  - $(aws ecr get-login --no-include-email --region "${AWS_DEFAULT_REGION}")
  - IMAGE_TAG="$(echo $CI_COMMIT_SHA | head -c 8)"

stages:
  - build_stg
  - deploy_stg
  - build_main
  - deploy_main
 
 
build_stg:
  stage: build_stg
  script:
    - echo "Building image..."
    - docker build -t $REPOSITORY_URL_STG:latest .
    - echo "Tagging image..."
    - docker tag $REPOSITORY_URL_STG:latest $REPOSITORY_URL_STG:$IMAGE_TAG
    - echo "Pushing image..."
    - docker push $REPOSITORY_URL_STG:latest
    - docker push $REPOSITORY_URL_STG:$IMAGE_TAG
  only:
    - staging


deploy_stg:
  stage: deploy_stg
  script:
    - echo $REPOSITORY_URL_STG:$IMAGE_TAG
    - TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition "$TASK_DEFINITION_NAME_STG" --region "${AWS_DEFAULT_REGION}")
    - NEW_CONTAINER_DEFINTIION=$(echo $TASK_DEFINITION | jq --arg IMAGE "$REPOSITORY_URL_STG:$IMAGE_TAG" '.taskDefinition.containerDefinitions[0].image = $IMAGE | .taskDefinition.containerDefinitions[0]')
    - echo "Registering new container definition..."
    - aws ecs register-task-definition --region "${AWS_DEFAULT_REGION}" --family "${TASK_DEFINITION_NAME_STG}" --container-definitions "${NEW_CONTAINER_DEFINTIION}"
    - echo "Updating the service..."
    - aws ecs update-service --region "${AWS_DEFAULT_REGION}" --cluster "${CLUSTER_NAME_STG}" --service "${SERVICE_NAME_STG}"  --task-definition "${TASK_DEFINITION_NAME_STG}"
  environment:
    name:  staging
    url: https://dev.1nfluencersmarketing.com
  only:
    - staging



build:
  stage: build_main
  script:
    - echo "Building image..."
    - docker build -t $REPOSITORY_URL:latest .
    - echo "Tagging image..."
    - docker tag $REPOSITORY_URL:latest $REPOSITORY_URL:$IMAGE_TAG
    - echo "Pushing image..."
    - docker push $REPOSITORY_URL:latest
    - docker push $REPOSITORY_URL:$IMAGE_TAG
  only:
    - main


deploy:
  stage: deploy_main
  script:
    - echo $REPOSITORY_URL:$IMAGE_TAG
    - TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition "$TASK_DEFINITION_NAME" --region "${AWS_DEFAULT_REGION}")
    - NEW_CONTAINER_DEFINTIION=$(echo $TASK_DEFINITION | jq --arg IMAGE "$REPOSITORY_URL:$IMAGE_TAG" '.taskDefinition.containerDefinitions[0].image = $IMAGE | .taskDefinition.containerDefinitions[0]')
    - echo "Registering new container definition..."
    - aws ecs register-task-definition --region "${AWS_DEFAULT_REGION}" --family "${TASK_DEFINITION_NAME}" --container-definitions "${NEW_CONTAINER_DEFINTIION}"
    - echo "Updating the service..."
    - aws ecs update-service --region "${AWS_DEFAULT_REGION}" --cluster "${CLUSTER_NAME}" --service "${SERVICE_NAME}"  --task-definition "${TASK_DEFINITION_NAME}"
  environment:
    name:  production
    url: https://1nfluencersmarketing.com
  only:  
    - main
